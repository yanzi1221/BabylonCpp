#---------------------------------#
#      General configuration      #
#---------------------------------#

# Version format
version: 4.0.{build}

# Branches to build
branches:
  # whitelist
  only:
    - master

#---------------------------------#
#    Environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2017

# Scripts that run after cloning repository
install:
  ############################################################################
  # All external dependencies are installed in C:\projects\deps
  ############################################################################
  - mkdir C:\projects\deps
  - cd C:\projects\deps

  ############################################################################
  # Install Ninja
  ############################################################################
  - set NINJA_URL="https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip"
  - appveyor DownloadFile %NINJA_URL% -FileName ninja.zip
  - 7z x ninja.zip -oC:\projects\deps\ninja > nul
  - set PATH=C:\projects\deps\ninja;%PATH%
  - ninja --version

  ############################################################################
  # Install a recent CMake
  ############################################################################
  - set CMAKE_URL="https://cmake.org/files/v3.16/cmake-3.16.2.zip"
  - appveyor DownloadFile %CMAKE_URL% -FileName cmake.zip
  - 7z x cmake.zip -oC:\projects\deps > nul
  - move C:\projects\deps\cmake-* C:\projects\deps\cmake # Move to a version-agnostic directory
  - set PATH=C:\projects\deps\cmake\bin;%PATH%
  - cmake --version

# Perform git clone with submodules
clone_script:
- cmd: >-
    git clone --depth 1 --recursive -q https://github.com/%APPVEYOR_REPO_NAME%.git %APPVEYOR_BUILD_FOLDER%

#---------------------------------#
#       Build configuration       #
#---------------------------------#

before_build:
  - cd C:\projects\babyloncpp
  - git clean -fx
  - REM Boring hacks in order to get AppVeyor to build PR branches
  - IF DEFINED APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME git remote add pr https://github.com/%APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME%.git & git fetch pr
  - IF DEFINED APPVEYOR_PULL_REQUEST_HEAD_COMMIT git checkout %APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH%
  - IF DEFINED APPVEYOR_PULL_REQUEST_TITLE echo "Building PR %APPVEYOR_PULL_REQUEST_TITLE%"
  - IF NOT DEFINED APPVEYOR_PULL_REQUEST_HEAD_COMMIT git checkout %APPVEYOR_REPO_BRANCH%
  - REM End of boring hacks
  - git submodule update --init --recursive
  - git branch
  - git log -1

build_script:
  - mkdir build
  - cd build
  - cmake .. -G"Visual Studio 15 2017 Win64"
  - cmake --build . --config Release
  - ctest . -C Release --output-on-failure

#---------------------------------#
#       Build notifications       #
#---------------------------------#
notifications:
- provider: Email
  to:
  - sam.dauwe@gmail.com
  subject: BabylonCpp build {{buildVersion}} - {{status}}
  on_build_success: false
  on_build_failure: true
  on_build_status_changed: true
